#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

password=$YNH_APP_ARG_PASSWORD
email=$(ynh_user_get_info --username=$admin --key=mail)

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

ynh_app_setting_set --app=$app --key=password --value="$password"
ynh_app_setting_set --app=$app --key=email --value=$email

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --weight=48

ynh_exec_warn_less ynh_install_nodejs --nodejs_version=$nodejs_version
ynh_exec_warn_less ynh_install_mongo --mongo_version=$mongo_version

#=================================================
# CREATE A MONGODB DATABASE
#=================================================
ynh_script_progression --message="Creating a MongoDB database..." --weight=5

db_name=$(ynh_sanitize_dbid --db_name=$app)
db_user=$db_name
ynh_app_setting_set --app=$app --key=db_name --value=$db_name
ynh_mongo_setup_db --db_user=$db_user --db_name=$db_name

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=10

ynh_setup_source --dest_dir="$install_dir"

mkdir "/tmp/ufs"

chmod -R o-rwx "$install_dir"
chown -R $app:$app "$install_dir"
chown -R $app:$app "/tmp/ufs"

#=================================================
# CONFIGURE MONGOD
#=================================================
ynh_script_progression --message="Configuring MongoDB..." --weight=10

ynh_replace_string --match_string="#  engine:" --replace_string="  engine: wiredTiger" --target_file="/etc/mongod.conf"
ynh_replace_string --match_string="#replication:" --replace_string="replication:\n  replSetName: rs01" --target_file="/etc/mongod.conf"

ynh_exec_warn_less systemctl enable mongod --quiet
ynh_systemd_action --service_name=mongod --action=restart --log_path=/var/log/mongodb/mongod.log --line_match="Waiting for connections"

if ynh_exec_warn_less ynh_mongo_exec --command="printjson(rs.status())" | grep -q "no replset config has been received"; then
	ynh_exec_warn_less ynh_mongo_exec --command="printjson(rs.initiate())" --eval
fi

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression --message="Adding system configurations related to $app..." --weight=1

ynh_add_nginx_config

ynh_add_systemd_config

ynh_use_logrotate
yunohost service add $app --description="Team collaboration communication platform" --log="/var/log/$app/$app.log"

#==============================================
# INSTALL ROCKETCHAT
#==============================================
ynh_script_progression --message="Building $app... (this will take some time and resources!)" --weight=29

# Create server directory and set permissions
mkdir -p $install_dir/programs/server
chown -R $app:$app $install_dir
chmod -R 775 $install_dir

pushd $install_dir/programs/server
	ynh_use_nodejs

	# Ensure yarn directories exist with correct permissions
	mkdir -p "$install_dir/programs/server/node_modules"
	chown -R $app:$app "$install_dir/programs/server"
	chmod -R 775 "$install_dir/programs/server"

	ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH yarn install --unsafe-perm
popd

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=29

ynh_systemd_action --service_name=$app --action="start" --log_path=systemd --line_match="SERVER RUNNING"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
